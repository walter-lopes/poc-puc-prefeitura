@model SGM_MVC.Models.Servico.Protocol

@{
    ViewData["Title"] = "Protocolos";
}

<div>
    <h3>Pesquisa de Serviços</h3>

    @using (Html.BeginForm("AtualizaProtocolo", "Portal", FormMethod.Post))
    {
        <div>
            <h4>Informações do Protocolo</h4>
            <hr />
            <dl class="row">
                <dt class="col-sm-2">
                    Protocolo
                </dt>
                <dd class="col-sm-10">
                    @Html.TextBoxFor(model => model.Codigo, new { @readonly = "readonly", @Name = "", @style = "border: none;" })
                    @Html.TextBoxFor(model => model.Id, new { @readonly = "readonly", @Name = "", @style = "display: none;" })
                </dd>
                <dt class="col-sm-2">
                    Serviço
                </dt>
                <dd class="col-sm-10">
                    @Html.TextBoxFor(model => model.Name, new { @readonly = "readonly", @Name = "", @style = "border: none;" })
                </dd>
                <dt class="col-sm-2">
                    Data de Registro
                </dt>
                <dd class="col-sm-10">
                    @Html.TextBoxFor(model => model.CreateDate, new { @readonly = "readonly", @Name = "", @style = "border: none;" })
                </dd>
                <dt class="col-sm-2">
                    Última Atualização
                </dt>
                <dd class="col-sm-10">
                    @Html.TextBoxFor(model => model.UpdateDate, new { @readonly = "readonly", @Name = "", @style = "border: none;" })
                </dd>
                <dt class="col-sm-2">
                    Solicitante
                </dt>
                <dd class="col-sm-10">
                    @Html.TextBoxFor(model => model.Person.Name, new { @readonly = "readonly", @Name = "", @style = "border: none;" })
                </dd>
                <dt class="col-sm-2">
                    Email Solicitante
                </dt>
                <dd class="col-sm-10">
                    @Html.TextBoxFor(model => model.Person.Contact.Email, new { @readonly = "readonly", @Name = "", @style = "border: none;" })
                </dd>
                <dt class="col-sm-2">
                    Telefone Solicitante
                </dt>
                <dd class="col-sm-10">
                    @Html.TextBoxFor(model => model.Person.Contact.Phone, new { @readonly = "readonly", @Name = "", @style = "border: none;" })
                </dd>

            </dl>
        </div>
        <table class="table">
            <thead>
                <tr>
                    <th>
                        Situação
                    </th>
                    <th>
                        Data
                    </th>
                    <th>
                        Responsável
                    </th>
                    @*<th>Email do Responsável</th>*@
                </tr>
            </thead>
            @if (Model.History != null)
            {
                <tbody>
                    @foreach (var item in Model.History)
                    {
                        <tr>
                            <td>
                                @Html.TextBoxFor(modelItem => item.Status, new { @readonly = "readonly", @Name = "", @style = "border: none;" })
                            </td>
                            <td>
                                @Html.TextBoxFor(modelItem => item.UpdateDate, new { @readonly = "readonly", @Name = "", @style = "border: none;" })
                            </td>
                            <td>
                                @Html.TextBoxFor(modelItem => item.Employee, new { @readonly = "readonly", @Name = "", @style = "border: none;" })
                            </td>
                            @*<td>
                                @Html.TextBoxFor(modelItem => item.EmployeeMail, new { @readonly = "readonly", @Name = "", @style = "border: none;" })
                            </td>*@
                        </tr>
                    }
                </tbody>
            }

        </table>
        @if (User.IsInRole(ViewBag.Role))
        {
            <div class="row">
                <div class="cols-sm-2">
                    <input type="submit" value="Atualizar Situação" class="btn btn-primary" />
                </div>
                <div class="col-sm-8 ">
                    @*<label asp-for="Status" class="control-label"></label>*@
                    @Html.DropDownListFor(m => m.Status, (SelectList)ViewBag.SelectListStatus, htmlAttributes: new { @required = "true", @class = "form-control col-sm-8" })
                    @*@Html.DropDownList("Status", ViewBag.SelectListStatus as IEnumerable<SelectListItem>, htmlAttributes: new { @required = "true", @class = "form-control col-sm-8" })*@
                    <span asp-validation-for="Status" class="text-danger"></span>
                    @*@Html.DropDownList("Status", ViewBag.SelectListStatus as IEnumerable<SelectListItem>, htmlAttributes: new { @required = "true", @class = "col-sm-6" })*@
                    @*@Html.ValidationMessage(ViewBag.SelectListStatus as IEnumerable<SelectListItem>, "Selecionar", new { @class = "text-danger" })*@
                </div>
            </div>
            <hr />
        }

    }
</div>
<div>
    <a asp-action="PesquisaProtocolo" class="btn btn-primary">Voltar</a>
</div>
